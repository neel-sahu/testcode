CREATE COMPUTE MODULE VESSEL_Get_RESREQ_Data_textCreation_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL EDI_TGetRESREQ(Environment.variables.txnID,Environment.Variables.TXTResult1[],Environment.Variables.TXTResult2[],Environment.Variables.TXTResult3[],Environment.Variables.TXTResult4[],Environment.Variables.TXTResult5[],Environment.Variables.TXTResult6[],Environment.Variables.TXTResult7[]);
		SET Environment.variables.dbEndTime = PASSTHRU('SELECT CURRENT_TIMESTAMP AS DBENDTIME;');
		SET OutputRoot.Properties.CodedCharSetId = 1208;
		-- SET OutputRoot.Properties.MessageType ='{}:RESOURCE_REQUISITION';
		-- SET OutputRoot.Properties.MessageSet ='{JMB_DFDL}';
		-- SET OutputRoot.Properties.ReplyProtocol = 'FILE';
		--UNH
		SET OutputRoot.DFDL.RESOURCE_REQUISITION.UNH.DocumentType = COALESCE(Environment.Variables.TXTResult1[1].DocumentType,'')||''||
		COALESCE(Environment.Variables.TXTResult1[1].DocumentName,'')||''||
		COALESCE(Environment.Variables.TXTResult1[1].DocumentNumber,'')||''||
		COALESCE(Environment.Variables.TXTResult1[1].CommonRefNumber,'')||''||
		COALESCE(Environment.Variables.TXTResult1[1].MessageType,'')||''||
		COALESCE(Environment.Variables.TXTResult1[1].SenderID,'');
		--RPD

		DECLARE countRecord INTEGER 0;
		DECLARE i INTEGER 1;

		SET countRecord = CARDINALITY(Environment.Variables.TXTResult2[]);

		WHILE countRecord > 0 DO
			SET OutputRoot.DFDL.RESOURCE_REQUISITION.RPD.RecipientsID[i] = Environment.Variables.TXTResult2[i].ReceivingParty ;
			SET i = i + 1;
			SET countRecord = countRecord - 1;
		END WHILE;
		--NPD

		DECLARE countRecord1 INTEGER 0;
		DECLARE j INTEGER 1;

		SET countRecord1 = CARDINALITY(Environment.Variables.TXTResult3[]);

		WHILE countRecord1 > 0 DO
			SET OutputRoot.DFDL.RESOURCE_REQUISITION.NPD.NotifyPartyIDs[j] = Environment.Variables.TXTResult3[j].NotifyParty ;
			SET j = j + 1;
			SET countRecord1 = countRecord1 - 1;
		END WHILE;
		--RAH
		SET OutputRoot.DFDL.RESOURCE_REQUISITION.RAH.RAHValues = COALESCE(Environment.Variables.TXTResult4[1].RecordType,'')||''||
		COALESCE(Environment.Variables.TXTResult4[1].VCN,'')||''||
		COALESCE(Environment.Variables.TXTResult4[1].CallSign,'')||''||
		COALESCE(Environment.Variables.TXTResult4[1].IMONumber,'')||''||
		COALESCE(Environment.Variables.TXTResult4[1].VoyageNumber,'')||''||
		COALESCE(Environment.Variables.TXTResult4[1].TOOrDOckCode,'')||''||
		COALESCE(Environment.Variables.TXTResult4[1].ResReqFrom,'')||''||
		COALESCE(Environment.Variables.TXTResult4[1].ResReqDate,'');
		--RAD

		DECLARE countRecord2 INTEGER 0;
		DECLARE countRecord3 INTEGER 0;
		DECLARE k INTEGER 1;
		DECLARE m INTEGER 1;


		SET countRecord2 = CARDINALITY(Environment.Variables.TXTResult5[]);
		SET countRecord3 = CARDINALITY(Environment.Variables.TXTResult6[]);
		DECLARE sk INTEGER 1;
		DECLARE ad INTEGER 1;
		WHILE (sk <= countRecord2) DO
			SET OutputRoot.DFDL.RESOURCE_REQUISITION.RAD.RADValues = COALESCE(Environment.Variables.TXTResult5[sk].RecordType,'')||''||
			COALESCE(Environment.Variables.TXTResult5[sk].RecordNumber,'')||''||
			COALESCE(Environment.Variables.TXTResult5[sk].NatureOfOperation,'')||''||
			COALESCE(Environment.Variables.TXTResult5[sk].CargoType,'')||''||
			COALESCE(Environment.Variables.TXTResult5[sk].BerthNumber,'')||''||
			COALESCE(Environment.Variables.TXTResult5[sk].HSCode,'')||''||
			COALESCE(Environment.Variables.TXTResult5[sk].CraneDeploymentType,'')||''||
			COALESCE(Environment.Variables.TXTResult5[sk].PurposeOfGang,'')||''||
			COALESCE(Environment.Variables.TXTResult5[sk].HookType,'')||''||
			COALESCE(Environment.Variables.TXTResult5[sk].ModeOfOperation,'')||''||
			COALESCE(Environment.Variables.TXTResult5[sk].NoOfGangsReq,'')||''||
			COALESCE(Environment.Variables.TXTResult5[sk].SupervisoryStaffRequired,'')||''||
			COALESCE(Environment.Variables.TXTResult5[sk].OvertimeStaffRequired,'')||''||
			COALESCE(Environment.Variables.TXTResult5[sk].ShiftNumber,'')||''||
			COALESCE(Environment.Variables.TXTResult5[sk].PlaceOfDeployment,'')||''||
			COALESCE(Environment.Variables.TXTResult5[sk].Remark,'');	
				
			-- COALESCE(Environment.Variables.TXTResult5[sk].RecordType,'')||''||
			-- COALESCE(Environment.Variables.TXTResult5[sk].RecordNumber,'')||''||
			-- COALESCE(Environment.Variables.TXTResult5[sk].NatureOfOperation,'')||''||
			-- COALESCE(Environment.Variables.TXTResult5[sk].CargoType,'')||''||
			-- COALESCE(Environment.Variables.TXTResult5[sk].BerthNumber,'')||''||
			-- COALESCE(Environment.Variables.TXTResult5[sk].HSCode,'')||''||
			-- COALESCE(Environment.Variables.TXTResult5[sk].CraneDeploymentType,'')||''||
			-- COALESCE(Environment.Variables.TXTResult5[sk].PurposeOfGang,'')||''||
			-- COALESCE(Environment.Variables.TXTResult5[sk].HookType,'')||''||
			-- COALESCE(Environment.Variables.TXTResult5[sk].ModeOfOperation,'')||''||
			-- COALESCE(Environment.Variables.TXTResult5[sk].NoOfGangsReq,'')||''||
			-- COALESCE(Environment.Variables.TXTResult5[sk].SupervisoryStaffRequired,'')||''||
			-- COALESCE(Environment.Variables.TXTResult5[sk].OvertimeStaffRequired,'')||''||
			-- COALESCE(Environment.Variables.TXTResult5[sk].ShiftNumber,'')||''||
			-- COALESCE(Environment.Variables.TXTResult5[sk].PlaceOfDeployment,'')||''||
			-- COALESCE(Environment.Variables.TXTResult5[sk].Remark,'');
		END WHILE;
		SET sk = sk + 1;
		--EDT
		WHILE (ad <= countRecord3) DO
			SET OutputRoot.DFDL.RESOURCE_REQUISITION.EDT.EDTValues = COALESCE(Environment.Variables.TXTResult6[ad].RecordType,'')||''||
			COALESCE(Environment.Variables.TXTResult6[ad].RecordNumber,'')||''||
			COALESCE(Environment.Variables.TXTResult6[ad].EquipmentNo,'')||''||
			COALESCE(Environment.Variables.TXTResult6[ad].UOMofequipment,'')||''||
			COALESCE(Environment.Variables.TXTResult6[ad].Size,'')||''||
			COALESCE(Environment.Variables.TXTResult6[ad].TypeofEquipment,'')||''||
			COALESCE(Environment.Variables.TXTResult6[ad].NoofEquipmentrequested,'');
			SET ad = ad +1;
			-- END WHILE;
			-- SET sk = sk + 1;
			SET ad = sk;
		END WHILE;
		--UNT
		SET OutputRoot.DFDL.RESOURCE_REQUISITION.UNT.DocumentCreatedDateandTime = Environment.Variables.TXTResult7[1].IssuedDateTime;

	END;
	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;

	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;

END MODULE;